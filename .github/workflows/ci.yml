name: CI

on: 
  workflow_dispatch:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    - name: Install the project
      run: |
        uv sync --all-extras --dev
        uv pip install .
    - name: Run tests
      run: uv run pytest tests

  build:
    name: Build distribution
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: 
      - test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
    - name: Set up Python
      run: uv python install
    - name: Install the project
      run: |
        uv sync --all-extras --dev
        uv pip install .
    - name: Build
      run: |
        uv build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/example_package_m67
    permissions:
      id-token: write
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1